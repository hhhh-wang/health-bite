<template>
	<view class="live-camera" :style="{ width: windowWidth + 'px', height: windowHeight + 'px' }">
		<live-pusher
			id="livePusher"
			ref="livePusher"
			class="livePusher"
			mode="FHD"
			beauty="0"
			whiteness="0"
			:aspect="aspect"
			min-bitrate="1000"
			audio-quality="16KHz"
			device-position="back"
			:auto-focus="true"
			:muted="true"
			:enable-camera="true"
			:enable-mic="false"
			:zoom="false"
			@statechange="statechange"
			:style="{ width: windowWidth + 'px', height: windowHeight + 'px' }"
		></live-pusher>

		<!-- 添加取景框 -->
		<!-- <cover-image 
			class="outline-img" 
			src="/static/camera/food-outline.png"
			:style="{ 
				width: windowWidth + 'px',
				height: outlineHeight + 'px',
				top: (windowHeight - outlineHeight) / 2 + 'px'  // 垂直居中
			}"
		></cover-image> -->

		<!-- 食材卡片 -->
		<food-card 
			v-if="currentFood"
			:food="currentFood"
			:top="cardTop"
			class="food-card"
		></food-card>

		<!-- 顶部遮罩 -->
		<view class="top-mask" :style="{ height: statusBarHeight + navBarHeight + 'px' }">
			<cover-image class="top-mask-bg" :style="{ height: statusBarHeight + navBarHeight + 'px' }" src="/static/camera/bar.png"></cover-image>
			<view class="nav-title" :style="{ top: statusBarHeight + 'px' }">
				<text class="title-text">请对准食物拍摄</text>
				<text class="subtitle-text">让我来帮你记录美味时刻</text>
			</view>
		</view>

		<!-- 底部菜单 -->
		<view class="menu" :style="{ height: bottomHeight + 'px' }">
			<cover-image class="menu-mask" :style="{ height: bottomHeight + 'px' }" src="/static/camera/bar.png"></cover-image>
			
			<view class="menu-buttons">
				<!-- 返回按钮 -->
				<view class="menu-btn" @tap="back">
					<u-icon name="arrow-left" color="#ffffff" size="38"></u-icon>
					<text class="btn-text">返回</text>
				</view>
				
				<!-- 快门键 -->
				<view class="shutter-container" @tap="snapshot">
					<view class="shutter-outer">
						<view class="shutter-inner"></view>
					</view>
				</view>
				
				<!-- 相册按钮 -->
				<view class="menu-btn" @tap="chooseFromAlbum">
					<u-icon name="photo" color="#ffffff" size="38"></u-icon>
					<text class="btn-text">相册</text>
				</view>
			</view>
		</view>
	</view>
</template>

<script>
import FoodCard from '@/components/food-card/index.vue';
import { getFoodInfo } from '@/services/foodService.js';

let _this = null;
export default {
	components: {
		FoodCard
	},
	data() {
		return {
			poenCarmeInterval: null,
			aspect: '2:3',
			windowWidth: 0,
			windowHeight: 0,
			statusBarHeight: 20, // 状态栏高度
			navBarHeight: 44,    // 导航栏高度
			outlineHeight: 0,    // 取景框高度（动态计算）
			bottomHeight: 0,     // 底部控制栏高度（动态计算）
			camerastate: false,
			livePusher: null,
			snapshotsrc: null,
			currentFood: null,
		};
	},
	computed: {
		cardTop() {
			return this.statusBarHeight + this.navBarHeight + this.outlineHeight + 100;
		}
	},
	onLoad(e) {
		_this = this;
		this.initCamera();
	},
	onReady() {
		this.livePusher = uni.createLivePusherContext('livePusher', this);
		this.startPreview();
		this.poenCarme();
	},
	methods: {
		//轮询打开
		poenCarme(){
			//#ifdef APP-PLUS
			if (plus.os.name == 'Android') {
				this.poenCarmeInterval = setInterval(function() {
					console.log(_this.camerastate);
					if (!_this.camerastate) _this.startPreview();
				}, 2500);
			}
			//#endif
		},
		//初始化相机
		initCamera() {
			uni.getSystemInfo({
				success: (res) => {
					// 基础尺寸数据
					this.windowWidth = res.windowWidth;
					this.windowHeight = res.windowHeight;
					this.statusBarHeight = res.statusBarHeight || 20;
					
					// 优化计算比例
					const navRatio = 0.07;  // 导航栏占屏幕高度的7%
					const bottomRatio = 0.15; // 底部控制栏占屏幕高度的15%
					
					// 计算实际像素高度
					this.navBarHeight = Math.round(res.windowHeight * navRatio);
					this.bottomHeight = Math.round(res.windowHeight * bottomRatio);
					
					// 调整取景框高度（减小为屏幕高度的50%，从之前的60%）
					this.outlineHeight = Math.round(res.windowHeight * 0.5);
					
					// 计算相机比例
					const aspectRatio = this.calculateAspectRatio(this.windowWidth, this.windowHeight);
					this.aspect = aspectRatio;
				}
			});
		},
		
		// 计算宽高比
		calculateAspectRatio(width, height) {
			// 计算最大公约数
			const gcd = this.gcd(width, height);
			return (width/gcd) + ':' + (height/gcd);
		},
		
		// 计算最大公约数
		gcd(a, b) {
			return b === 0 ? a : this.gcd(b, a % b);
		},

		//开始预览
		startPreview() {
			this.livePusher.startPreview({
				success: a => {
					console.log(a)
				}
			});
		},
		
		//停止预览
		stopPreview() {
			this.livePusher.stopPreview({
				success: a => {
					_this.camerastate = false; //标记相机未启动
				}
			});
		},
		
		//状态
		statechange(e) {
			//状态改变
			console.log(e);
			if (e.detail.code == 1007) {
				_this.camerastate = true;
			} else if (e.detail.code == -1301) {
				_this.camerastate = false;
			}
		},
		
		//返回
		back() {
			uni.navigateBack();
		},

		//抓拍
		async snapshot() {
			try {
				// 震动反馈
				uni.vibrateShort();
				
				// 拍照
				const photoResult = await new Promise((resolve, reject) => {
					this.livePusher.snapshot({
						success: (e) => resolve(e.message.tempImagePath),
						fail: reject
					});
				});
				
				if (photoResult) {
					this.snapshotsrc = photoResult;
					
					// 显示加载提示
					uni.showLoading({
						title: '正在识别...'
					});
					
					try {
						// 调用识别服务
						await this.recognizeFood(this.snapshotsrc);
						
						// 停止预览
						this.stopPreview();
						
						// 隐藏加载提示
						uni.hideLoading();
						
						// 显示识别结果一段时间后返回
						//setTimeout(() => {
						//	uni.navigateBack();
						//}, 1500);
						
					} catch (error) {
						uni.hideLoading();
						uni.showToast({
							title: '识别失败，请重试',
							icon: 'none'
						});
					}
				}
			} catch (error) {
				console.error('拍照失败:', error);
				uni.showToast({
					title: '拍照失败，请重试',
					icon: 'none'
				});
			}
		},

		// 移除闪光灯相关方法

		//设置
		setImage() {
			let pages = getCurrentPages();
			let prevPage = pages[pages.length - 2]; //上一个页面

			//直接调用上一个页面的setImage()方法，把数据存到上一个页面中去
			prevPage.$vm.setImage({ path: _this.snapshotsrc });
		},

		// 打开相机
		openCamera() {
			uni.navigateTo({
				url: '/pages/camera/camera'
			});
		},
		
		// 接收相机拍照结果
		setImage(data) {
			// 获取图片路径
			const imagePath = data.path;
			
			// 在这里处理图片
			this.foodImage = imagePath; // 存储图片路径
			
			// 可以调用识别API或其他处理
			this.recognizeFood(imagePath);
		},
		
		// 示例：识别食物
		async recognizeFood(imagePath) {
			try {
				// 这里替换为实际的图片上传和识别服务
				// const result = await uploadAndRecognize(imagePath);
				
				// 示例：模拟识别结果
				const foodInfo = await getFoodInfo("hotdog");
				if (foodInfo) {
					this.currentFood = foodInfo;
				}
			} catch (error) {
				console.error('识别食材失败:', error);
				throw error; // 向上传递错误
			}
		},
		
		// 从相册选择
		chooseFromAlbum() {
			uni.chooseImage({
				count: 1,
				sourceType: ['album'],
				success: async (res) => {
					try {
						this.snapshotsrc = res.tempFilePaths[0];
						
						uni.showLoading({
							title: '正在识别...'
						});
						
						await this.recognizeFood(this.snapshotsrc);
						
						uni.hideLoading();
						
						setTimeout(() => {
							uni.navigateBack();
						}, 1500);
						
					} catch (error) {
						uni.hideLoading();
						uni.showToast({
							title: '识别失败，请重试',
							icon: 'none'
						});
					}
				}
			});
		},
		flip() {
			this.livePusher.switchCamera();
		}
	}
};
</script>

<style>
.live-camera {
	position: relative;
	flex: 1;
}

.livePusher {
	position: absolute;
	top: 0;
	left: 0;
}

.outline-img {
	position: absolute;
	left: 0;
	z-index: 97;
	top: 50% !important;
	transform: translateY(-50%);
	margin-top: -50rpx;
}

.top-mask {
	position: fixed;
	top: 0;
	left: 0;
	width: 750rpx;
	z-index: 98;
}

.top-mask-bg {
	position: absolute;
	top: 0;
	left: 0;
	width: 750rpx;
	z-index: 98;
}

.nav-title {
	position: absolute;
	width: 750rpx;
	z-index: 99;
	align-items: center;
	justify-content: center;
	height: 88rpx;
}

.title-text {
	color: #ffffff;
	font-size: 36rpx;
	font-weight: 600;
	margin-bottom: 8rpx;
}

.subtitle-text {
	color: rgba(255, 255, 255, 0.8);
	font-size: 24rpx;
}

.menu {
	position: absolute;
	left: 0;
	bottom: 0;
	width: 750rpx;
	z-index: 98;
}

.menu-mask {
	position: absolute;
	left: 0;
	bottom: 0;
	width: 750rpx;
	z-index: 98;
}

.menu-buttons {
	position: absolute;
	bottom: 50rpx;
	left: 0;
	width: 750rpx;
	height: 180rpx;
	z-index: 99;
	flex-direction: row;
	align-items: center;
	justify-content: space-around;
	padding: 0 60rpx;
}

.menu-btn {
	width: 160rpx;
	height: 90rpx;
	background-color: rgba(66, 211, 146, 0.3);
	border: 2rpx solid rgba(66, 211, 146, 0.5);
	border-radius: 45rpx;
	align-items: center;
	justify-content: center;
	flex-direction: column;
}

.shutter-container {
	width: 140rpx;
	height: 140rpx;
	align-items: center;
	justify-content: center;
}

.shutter-outer {
	width: 120rpx;
	height: 120rpx;
	border-radius: 60rpx;
	background-color: rgba(255, 255, 255, 0.2);
	align-items: center;
	justify-content: center;
	border: 4rpx solid #ffffff;
}

.shutter-inner {
	width: 100rpx;
	height: 100rpx;
	border-radius: 50rpx;
	background-color: #42d392;
	border: 4rpx solid rgba(255, 255, 255, 0.8);
}

.btn-text {
	color: #FFFFFF;
	font-size: 26rpx;
	margin-top: 6rpx;
}

.food-card {
	position: fixed;
	z-index: 999;
	left: 0;
	width: 750rpx;
}
</style>