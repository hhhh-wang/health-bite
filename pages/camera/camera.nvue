<template>
	<view class="live-camera" :style="{ width: windowWidth, height: windowHeight }">
		<live-pusher
			id="livePusher"
			ref="livePusher"
			class="livePusher"
			mode="FHD"
			beauty="0"
			whiteness="0"
			:aspect="aspect"
			min-bitrate="1000"
			audio-quality="16KHz"
			device-position="back"
			:auto-focus="true"
			:muted="true"
			:enable-camera="true"
			:enable-mic="false"
			:zoom="false"
			@statechange="statechange"
			:style="{ width: windowWidth, height: windowHeight }"
		></live-pusher>

		<!-- 添加取景框 -->
		<cover-image 
			class="outline-img" 
			src="/static/camera/food-outline.png"
			:style="{ 
				width: windowWidth + 'px',
				height: contentHeight + 'px',
				top: '240rpx'
			}"
		></cover-image>

		<!-- 顶部遮罩 -->
		<view class="top-mask">
			<cover-image class="top-mask-bg" src="/static/camera/bar.png"></cover-image>
			<view class="nav-title">
				<text class="title-text">请对准食物拍摄</text>
				<text class="subtitle-text">让我来帮你记录美味时刻</text>
			</view>
		</view>

		<!-- 底部菜单 -->
		<view class="menu">
			<cover-image class="menu-mask" src="/static/camera/bar.png"></cover-image>
			
			<view class="menu-buttons">
				<!-- 返回按钮 -->
				<view class="menu-btn" @tap="back">
					<u-icon name="arrow-left" color="#ffffff" size="38"></u-icon>
					<text class="btn-text">返回</text>
				</view>
				
				<!-- 快门键 -->
				<view class="shutter-container" @tap="snapshot">
					<view class="shutter-outer">
						<view class="shutter-inner"></view>
					</view>
				</view>
				
				<!-- 相册按钮 -->
				<view class="menu-btn" @tap="chooseFromAlbum">
					<u-icon name="photo" color="#ffffff" size="38"></u-icon>
					<text class="btn-text">相册</text>
				</view>
			</view>
		</view>

		<!-- 食材卡片 -->
		<food-card 
			v-if="currentFood"
			:food="currentFood"
			:top="240"
		></food-card>
	</view>
</template>

<script>
import FoodCard from '@/components/food-card/index.vue';
import { getFoodInfo } from '@/services/foodService.js';

let _this = null;
export default {
	components: {
		FoodCard
	},
	data() {
		return {
			poenCarmeInterval: null,
			aspect: '2:3',
			windowWidth: '',
			windowHeight: '',
			contentHeight: '', // 添加内容区域高度
			topBarHeight: 240, // 顶部导航栏高度（rpx）
			bottomBarHeight: 300, // 底部遮罩高度（rpx）
			camerastate: false,
			livePusher: null,
			snapshotsrc: null,
			currentFood: null,
		};
	},
	onLoad(e) {
		_this = this;
		this.initCamera();
	},
	onReady() {
		this.livePusher = uni.createLivePusherContext('livePusher', this);
		this.startPreview();
		this.poenCarme();
	},
	methods: {
		//轮询打开
		poenCarme(){
			//#ifdef APP-PLUS
			if (plus.os.name == 'Android') {
				this.poenCarmeInterval = setInterval(function() {
					console.log(_this.camerastate);
					if (!_this.camerastate) _this.startPreview();
				}, 2500);
			}
			//#endif
		},
		//初始化相机
		initCamera() {
			uni.getSystemInfo({
				success: function(res) {
					_this.windowWidth = res.windowWidth;
					_this.windowHeight = res.windowHeight;
					
					// 计算实际像素值
					const rpxRatio = res.windowWidth / 750;
					const topBarPx = _this.topBarHeight * rpxRatio;
					const bottomBarPx = _this.bottomBarHeight * rpxRatio;
					
					// 计算内容区域高度
					_this.contentHeight = res.windowHeight - topBarPx - bottomBarPx;
					
					// 计算相机比例
					let zcs = _this.aliquot(_this.windowWidth, _this.contentHeight);
					_this.aspect = (_this.windowWidth/zcs) + ':' + (_this.contentHeight/zcs);
				}
			});
		},
		
		//整除数计算
		aliquot(x, y) {
			if (x % y == 0) return y;
			return this.aliquot(y, x % y);
		},

		//开始预览
		startPreview() {
			this.livePusher.startPreview({
				success: a => {
					console.log(a)
				}
			});
		},
		
		//停止预览
		stopPreview() {
			this.livePusher.stopPreview({
				success: a => {
					_this.camerastate = false; //标记相机未启动
				}
			});
		},
		
		//状态
		statechange(e) {
			//状态改变
			console.log(e);
			if (e.detail.code == 1007) {
				_this.camerastate = true;
			} else if (e.detail.code == -1301) {
				_this.camerastate = false;
			}
		},
		
		//返回
		back() {
			uni.navigateBack();
		},

		//抓拍
		async snapshot() {
			uni.vibrateShort();
			this.livePusher.snapshot({
				success: async (e) => {
					this.snapshotsrc = e.message.tempImagePath;
					// 在拍照后进行识别
					await this.recognizeFood(this.snapshotsrc);
					// 延迟返回，让用户看到识别结果
					setTimeout(() => {
						this.stopPreview();
						this.setImage();
						uni.navigateBack();
					}, 1500);
				}
			});
		},

		// 移除闪光灯相关方法

		//设置
		setImage() {
			let pages = getCurrentPages();
			let prevPage = pages[pages.length - 2]; //上一个页面

			//直接调用上一个页面的setImage()方法，把数据存到上一个页面中去
			prevPage.$vm.setImage({ path: _this.snapshotsrc });
		},

		// 打开相机
		openCamera() {
			uni.navigateTo({
				url: '/pages/camera/camera'
			});
		},
		
		// 接收相机拍照结果
		setImage(data) {
			// 获取图片路径
			const imagePath = data.path;
			
			// 在这里处理图片
			this.foodImage = imagePath; // 存储图片路径
			
			// 可以调用识别API或其他处理
			this.recognizeFood(imagePath);
		},
		
		// 示例：识别食物
		async recognizeFood(imagePath) {
			try {
				// 这里模拟识别结果始终为"hotdog"
				const foodName = "hotdog";
				const foodInfo = await getFoodInfo(foodName);
				if (foodInfo) {
					this.currentFood = foodInfo;
				}
			} catch (error) {
				console.error('识别食材失败:', error);
			}
		},
		
		// 从相册选择
		chooseFromAlbum() {
			uni.chooseImage({
				count: 1,
				sourceType: ['album'],
				success: (res) => {
					this.snapshotsrc = res.tempFilePaths[0];
					this.setImage();
					uni.navigateBack();
				}
			});
		},
		flip() {
			this.livePusher.switchCamera();
		}
	}
};
</script>

<style>
.live-camera {
	justify-content: center;
	align-items: center;
}

.outline-img {
	position: fixed;
	left: 0;
	z-index: 97;
}

.top-mask {
	position: fixed;
	top: 0;
	left: 0;
	width: 750rpx;
	height: 240rpx;
	z-index: 98;
}

.top-mask-bg {
	position: absolute;
	top: 0;
	left: 0;
	width: 750rpx;
	height: 240rpx;
	z-index: 98;
}

.nav-title {
	position: absolute;
	top: 60rpx;
	width: 750rpx;
	z-index: 99;
	align-items: center;
}

.title-text {
	color: #ffffff;
	font-size: 36rpx;
	font-weight: 600;
	margin-bottom: 8rpx;
}

.subtitle-text {
	color: rgba(255, 255, 255, 0.8);
	font-size: 24rpx;
}

.menu {
	position: absolute;
	left: 0;
	bottom: 0;
	width: 750rpx;
	height: 300rpx;
	z-index: 98;
}

.menu-mask {
	position: absolute;
	left: 0;
	bottom: 0;
	width: 750rpx;
	height: 300rpx;
	z-index: 98;
}

.menu-buttons {
	position: absolute;
	bottom: 60rpx;
	left: 0;
	width: 750rpx;
	height: 160rpx;
	z-index: 99;
	flex-direction: row;
	align-items: center;
	justify-content: space-around;
	padding: 0 60rpx;
}

.menu-btn {
	width: 160rpx;
	height: 90rpx;
	background-color: rgba(66, 211, 146, 0.3);
	border: 2rpx solid rgba(66, 211, 146, 0.5);
	border-radius: 45rpx;
	align-items: center;
	justify-content: center;
	flex-direction: column;
}

.shutter-container {
	width: 140rpx;
	height: 140rpx;
	align-items: center;
	justify-content: center;
}

.shutter-outer {
	width: 120rpx;
	height: 120rpx;
	border-radius: 60rpx;
	background-color: rgba(255, 255, 255, 0.2);
	align-items: center;
	justify-content: center;
	border: 4rpx solid #ffffff;
}

.shutter-inner {
	width: 100rpx;
	height: 100rpx;
	border-radius: 50rpx;
	background-color: #42d392;
	border: 4rpx solid rgba(255, 255, 255, 0.8);
}

.btn-text {
	color: #FFFFFF;
	font-size: 26rpx;
	margin-top: 6rpx;
}
</style>